{% extends 'base.html.twig' %}

{% block title %}Team Members{% endblock %}

{% block body %}
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Team Members</h1>
            <a href="{{ path('app_team_profiles') }}" class="btn btn-info">
                <i class="fas fa-chart-line"></i> View Profiles
            </a>
        </div>

        <!-- Formulaire pour ajouter un membre -->
        <div class="card shadow-sm mb-5">
            <div class="card-header bg-primary text-white">
                <h2 class="h5 mb-0">Add a Team Member</h2>
            </div>
            <div class="card-body">
                {{ form_start(form, {'attr': {'class': 'row g-3'}}) }}

                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(form.name, 'Name', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.name, {'attr': {'class': 'form-control'}}) }}
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        {{ form_label(form.jiraId, 'Jira ID', {'label_attr': {'class': 'form-label'}}) }}
                        {{ form_widget(form.jiraId, {'attr': {'class': 'form-control'}}) }}
                        <small class="form-text text-muted">Optional: Jira user ID for integration</small>
                    </div>
                </div>

                <div class="col-12 text-end mt-3">
                    <button type="submit" class="btn btn-primary">Add Member</button>
                </div>

                {{ form_end(form) }}
            </div>
        </div>

        <!-- Liste des membres -->
        <h2 class="h5 mb-3">List of Team Members</h2>

        {% if teamMembers is not empty %}
            <table class="table table-striped table-bordered shadow-sm">
                <thead class="table-primary">
                <tr>
                    <th>Name</th>
                    <th>Jira ID</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                {% for member in teamMembers %}
                    <tr data-member-id="{{ member.id }}">
                        <td>
                            <span class="name-display">{{ member.name }}</span>
                            <input type="text" class="form-control name-input d-none" value="{{ member.name }}">
                        </td>
                        <td>
                            <span class="jira-id-display">{{ member.jiraId ?: '-' }}</span>
                            <input type="text" class="form-control jira-id-input d-none" value="{{ member.jiraId }}">
                        </td>
                        <td>
                            <button class="btn btn-sm btn-warning edit-btn">Edit</button>
                            <button class="btn btn-sm btn-success save-btn d-none">Save</button>
                            <button class="btn btn-sm btn-secondary cancel-btn d-none">Cancel</button>
                            <form action="{{ path('app_team_delete', { 'id': member.id }) }}" method="post" class="d-inline">
                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ member.id) }}">
                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this item?');">Delete</button>
                            </form>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        {% else %}
            <p class="text-muted">No team members found.</p>
        {% endif %}

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('.edit-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const row = button.closest('tr');
                    row.querySelector('.name-display').classList.add('d-none');
                    row.querySelector('.name-input').classList.remove('d-none');
                    row.querySelector('.jira-id-display').classList.add('d-none');
                    row.querySelector('.jira-id-input').classList.remove('d-none');
                    row.querySelector('.edit-btn').classList.add('d-none');
                    row.querySelector('.save-btn').classList.remove('d-none');
                    row.querySelector('.cancel-btn').classList.remove('d-none');
                });
            });

            document.querySelectorAll('.cancel-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const row = button.closest('tr');
                    row.querySelector('.name-display').classList.remove('d-none');
                    row.querySelector('.name-input').classList.add('d-none');
                    row.querySelector('.jira-id-display').classList.remove('d-none');
                    row.querySelector('.jira-id-input').classList.add('d-none');
                    row.querySelector('.edit-btn').classList.remove('d-none');
                    row.querySelector('.save-btn').classList.add('d-none');
                    row.querySelector('.cancel-btn').classList.add('d-none');
                });
            });

            document.querySelectorAll('.save-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const row = button.closest('tr');
                    const memberId = row.dataset.memberId;
                    const newName = row.querySelector('.name-input').value;
                    const newJiraId = row.querySelector('.jira-id-input').value;

                    fetch(`/team/update/${memberId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({ 
                            name: newName,
                            jiraId: newJiraId
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                row.querySelector('.name-display').textContent = newName;
                                row.querySelector('.jira-id-display').textContent = newJiraId || '-';
                                row.querySelector('.name-display').classList.remove('d-none');
                                row.querySelector('.name-input').classList.add('d-none');
                                row.querySelector('.jira-id-display').classList.remove('d-none');
                                row.querySelector('.jira-id-input').classList.add('d-none');
                                row.querySelector('.edit-btn').classList.remove('d-none');
                                row.querySelector('.save-btn').classList.add('d-none');
                                row.querySelector('.cancel-btn').classList.add('d-none');
                            } else {
                                alert('Failed to update member');
                            }
                        });
                });
            });
        });
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
{% endblock %}
